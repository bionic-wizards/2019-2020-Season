package org.firstinspires.ftc.teamcode;

import com.qualcomm.robotcore.eventloop.opmode.Disabled;
import java.lang.annotation.Target;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.DcMotorControllerEx;
import com.qualcomm.robotcore.hardware.DcMotorEx;
import com.qualcomm.robotcore.hardware.PIDCoefficients;
import com.qualcomm.robotcore.robot.Robot;
import com.qualcomm.robotcore.eventloop.opmode.OpMode;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.util.Range;

@TeleOp(name="Mecanumrive")

public class Mecanumdrive extends OpMode{
//Define Robot
    Robothardware robot = new Robothardware(); 
  //Constants 
  
    //Run ONCE on init 
    @Override
    public void init() {
      robot.init(hardwareMap);
        telemetry.addData("STATUS", "Initialized");    
    }

  //LOOP on Init
    @Override
    public void init_loop() {
        //spin servo = 0 
        //grab arm =0 
        //spin arm forward = .35
        
        
        
    }

    //RUN ONCE ON start()
    @Override
    public void start() {
    }

  //Loop on Start()
    @Override
    public void loop() {
   
            
        double G1rightStickY = -gamepad1.right_stick_y;
        double G1leftStickY = -gamepad1.left_stick_y;
        double G1rightStickx = -gamepad1.right_stick_x;
        double G1leftStickx = -gamepad1.left_stick_x;
        
        double G2rightStickY = -gamepad2.right_stick_y;
        double G2leftStickY = -gamepad2.left_stick_y;
        double G2rightStickX = -gamepad2.right_stick_x;
        double G2leftStickX = -gamepad2.left_stick_x;
        
        
        boolean G1rightBumper1 = gamepad1.right_bumper;
        boolean G1leftBumper1 = gamepad1.left_bumper; 
        
        boolean G1rightBumper2 = gamepad2.right_bumper;
        boolean G1leftBumper2 = gamepad2.left_bumper; 
        
        
        boolean C1dpad_up1 = gamepad1.dpad_up;
        boolean C1dpad_right1 = gamepad1.dpad_right; 
        boolean C1dpad_down1 = gamepad1.dpad_down;
        boolean C1dpad_left1 = gamepad1.dpad_left; 
        
        boolean C1dpad_up2 = gamepad2.dpad_up;
        boolean C1dpad_right2 = gamepad2.dpad_right; 
        boolean C1dpad_down2 = gamepad2.dpad_down;
        boolean C1dpad_left2 = gamepad2.dpad_left; 
        
        boolean AButton1 = gamepad1.a; 
        boolean XBUTTON1 = gamepad1.x;
        boolean YButton1 = gamepad1.y; 
        boolean BButton1 = gamepad1.b;
        
        boolean AButton2 = gamepad2.a; 
        boolean XBUTTON2 = gamepad2.x;
        boolean YButton2 = gamepad2.y; 
        boolean BButton2 = gamepad2.b;
        
       telemetry.addData("Target Power", robot.liftarm);
       telemetry.addData("Motor Power",robot.liftarm.getPower());
       telemetry.addData("Status","Running");
       telemetry.update();
       
        //controller 2 code 
        if(AButton2){
     robot.spin.setPosition(0.35);
        }
        
        if(BButton2){
        robot.spin.setPosition(0);
        }
        
        if(XBUTTON2){
          robot.grab.setPosition(0.6);
        }
        
        if(YButton2){
          robot.grab.setPosition(0.2);
        }
        
        
      
        //controller 1 code 
    if(G1leftBumper1){
        robot.frontleft.setPower(1);//front left
        robot.backleft.setPower(-1);//back left
        robot.frontright.setPower(1);//front right
        robot.backright.setPower(-1);//back right 
    }
    else if(G1rightBumper1){
        robot.frontleft.setPower(-1);
        robot.backleft.setPower(1);
        robot.frontright.setPower(-1);
        robot.backright.setPower(1);
    }
    else if(G1leftBumper1){
        robot.frontleft.setPower(-1);
        robot.backleft.setPower(1);
        robot.frontright.setPower(-1);
        robot.backright.setPower(1);
    }
    else if(C1dpad_up1){
        robot.backleft.setPower(-1);
        robot.frontright.setPower(1);
    }
    else if(C1dpad_right1){
        robot.frontleft.setPower(1);
        robot.backright.setPower(-1);
    }
    else if (C1dpad_down1){
      robot.frontright.setPower(-1);
      robot.backleft.setPower(1);
    }
    else if(C1dpad_left1){
      robot.frontleft.setPower(-1);
      robot.backright.setPower(1);
}
     else{
        robot.frontleft.setPower(-G1leftStickY);
        robot.backleft.setPower(-G1leftStickY);
        robot.frontright.setPower(G1rightStickY);
        robot.backright.setPower(G1rightStickY);

        }
                robot.liftarm.setPower(G2leftStickY);
 
}
@Override
public void stop(){
}

}
